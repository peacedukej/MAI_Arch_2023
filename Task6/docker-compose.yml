version: '3'

services:

  messenger:
    build: .
    container_name: messenger-m2
    ports:
      - 8000:8000
    volumes:
      - ./rest_api:/messenger/rest_api/
      - ./packages:/messenger/packages
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app_net
    env_file:
      - ./.env

  db:
    container_name: postgres-m2
    image: postgres:15
    environment:
      - PGUSER=postgres
      - POSTGRES_PASSWORD=123103Pp
      - PGDATA=/data/postgres
      - POSTGRES_DB=mai_arch_db
      
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./postgres-data:/data/postgres
      - ./Postgres_DDL_DML/create.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_net

  redis:
    image: redis
    container_name: redis-m2
    restart: always
    ports:
      - 6379:6379
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app_net

  api_gateway:
    build: .
    container_name: api_gateway-m2
    volumes:
      - ./api_gateway.py:/messenger/api_gateway.py
    command: uvicorn api_gateway:app --host 0.0.0.0 --port 8001
    ports:
      - "8001:8001"
    # depends_on:
    #   - messenger
    networks:
      - app_net
  # wrk:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.wrk
  #   container_name: wrk
  #   networks:
  #     - app_net
  #   entrypoint: ["sleep", "infinity"] 

networks:
  app_net:
    driver: "bridge"
    external: false
